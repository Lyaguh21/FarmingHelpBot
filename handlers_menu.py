from aiogram import Router, Bot, F
from aiogram.filters import Command
from aiogram.types import Message, BotCommand, FSInputFile, InputMediaPhoto, CallbackQuery

from FHB_TEST.button import menu_keyboard, back_to_menu_keyboard, select_species_plant,in_menu_keyboard
    
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router = Router()

#–º–µ–Ω—é –∫–æ–º–∞–Ω–¥
async def set_main_menu(bot: Bot):
    main_menu_commands = [
        BotCommand(command="/start", description="–ù–∞—á–∞–ª–æ –æ–±—â–µ–Ω–∏—è"),
        BotCommand(command="/menu", description="–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),

    ]
    await bot.set_my_commands(main_menu_commands)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command(commands=["start"]))
async def process_start_command(message: Message):
    await message.answer_photo(photo= FSInputFile("../FHB_TEST/photo_menu/welcome.jpg"), caption="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞, –ø–æ–º–æ—â–Ω–∏–∫–∞ –ø–æ —Ñ–µ—Ä–º–µ! –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤—ã–±–æ—Ä–æ–º —É–¥–æ–±—Ä–µ–Ω–∏–π –∏ —Ö–∏–º–∏–∫–∞—Ç–æ–≤ üì¶. –¢–∞–∫ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –±–æ–ª–µ–∑–Ω–∏ –ø–æ —Ñ–æ—Ç–æ ‚ú®.\n–ß—Ç–æ –±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é.",reply_markup=in_menu_keyboard)

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
@router.message(Command(commands=["menu"]))
async def process_menu_command(message: Message):
    await message.answer_photo(photo = FSInputFile("../FHB_TEST/photo_menu/menu.png"),reply_markup=menu_keyboard,)



#–ö–Ω–æ–ø–∫–∞ –≤ –º–µ–Ω—é
@router.callback_query(F.data == "in_menu_pressed")
async def process_in_menu_press(callback: CallbackQuery):
    await callback.message.edit_media(
        InputMediaPhoto(media=FSInputFile("../FHB_TEST/photo_menu/menu.png")),
        reply_markup=menu_keyboard
    )

# —Ö–µ–Ω–¥–ª–µ—Ä—ã –Ω–∞ –º–µ–Ω—é
@router.callback_query(F.data == "start_button_pressed")
async def process_start_press(callback: CallbackQuery):
    await callback.message.edit_media(
        InputMediaPhoto(media=FSInputFile("../FHB_TEST/photo_menu/type.png")),
        reply_markup=select_species_plant
    )
#–ü—Ä–∏–≤–µ—Ç –í–ò13
@router.callback_query(F.data == "message_support_button_pressed")
async def process_message_support_press(callback: CallbackQuery):
    await callback.message.edit_media(
        InputMediaPhoto(media=FSInputFile("../FHB_TEST/photo_menu/support.png"),caption="–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –µ—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è"),
        reply_markup=back_to_menu_keyboard
    )

@router.callback_query(F.data == "info_button_pressed")
async def process_info_press(callback: CallbackQuery):
    await callback.message.edit_media(
        InputMediaPhoto(media=FSInputFile("../FHB_TEST/photo_menu/info.png"),caption="–ù–∞—à –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –º–æ–∂–µ—Ç–µ:\n- –£–∑–Ω–∞—Ç—å –∫–∞–∫ –≤—ã—Ä–∞—â–∏–≤–∞—Ç—å —Ç—É –∏–ª–∏ –∏–Ω—É—é –ö—É–ª—å—Ç—É—Ä—É.\n- –£–∑–Ω–∞—Ç—å –∫–∞–∫ –±–æ—Ä–æ—Ç—å—Å—è —Å –≤—Ä–µ–¥–∏—Ç–µ–ª—è–º–∏ –∏ –±–æ–ª–µ–∑–Ω—è–º–∏.\n- –£–∑–Ω–∞—Ç—å –∫–∞–∫–∏–µ —É–¥–æ–±—Ä–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.\n- –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –±–æ–ª–µ–∑–Ω—å —Ä–∞—Å—Ç–µ–Ω–∏—è –ø–æ —Ñ–æ—Ç–æ.\n- –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º.\n–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ...  "),
        reply_markup=back_to_menu_keyboard
    )

@router.callback_query(F.data == "desiese_photo_pressed")
async def process_desiese_photo_press(callback: CallbackQuery):
    await callback.answer(
        text="‚ú® –ß—Ç–æ –±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏–µ–º –ø–æ —Ñ–æ—Ç–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ FHB+ ‚ú®",
        show_alert=True
    )

@router.callback_query(F.data == "buy_pass_pressed")
async def process_buy_pass_press(callback: CallbackQuery):
    await callback.answer(
        text="–ù–∞ –î–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚öôÔ∏è",
        show_alert=True

    )
@router.callback_query(F.data == "messanger_pressed")
async def process_buy_pass_press(callback: CallbackQuery):
    await callback.answer(
        text="–í –±—É–¥—É—â–µ–º —Ç—É—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —á—Ç–æ-—Ç–æ –±—É–¥–µ—Ç‚öôÔ∏è",
        show_alert=True

    )
